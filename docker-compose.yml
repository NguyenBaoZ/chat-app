version: "3.9"

services:
  # Databases
  mongo:
    image: mongo:6
    container_name: chat-mongo
    ports:
      - "27017:27017"
    volumes:
      - ./infra/mongo/data:/data/db
    networks:
      - chat-net

  redis:
    image: redis:7
    container_name: chat-redis
    ports:
      - "6379:6379"
    networks:
      - chat-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: chat-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - chat-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: chat-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - chat-net

  minio:
    image: minio/minio:latest
    container_name: chat-minio
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./infra/minio/data:/data
    networks:
      - chat-net

  # Realtime Gateway (Node.js + Socket.io)
  realtime-gateway:
    build: ./realtime-gateway
    container_name: chat-realtime
    ports:
      - "4000:4000"
    environment:
      - KAFKA_BROKER=kafka:9092
      - REDIS_HOST=redis
      - MONGO_URI=mongodb://mongo:27017/chat
    depends_on:
      - kafka
      - redis
      - mongo
    networks:
      - chat-net

  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: chat-api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - user-service
      - message-service
    networks:
      - chat-net

  # Example Backend Service: Auth
  auth-service:
    build: ./auth-service
    container_name: chat-auth
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGO_URI=mongodb://mongo:27017/chat
    depends_on:
      - mongo
    networks:
      - chat-net

  # Example Backend Service: User
  user-service:
    build: ./user-service
    container_name: chat-user
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGO_URI=mongodb://mongo:27017/chat
    depends_on:
      - mongo
    networks:
      - chat-net

networks:
  chat-net:
    driver: bridge
