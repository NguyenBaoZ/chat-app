stages:
  - build
  - test
  - docker
  - deploy

variables:
  MAVEN_CLI_OPTS: "-s .mvn/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  DOCKER_DRIVER: overlay2

cache:
  paths:
    - .m2/repository
    - node_modules/

before_script:
  - export DOCKER_HOST=tcp://docker:2375/

build_backend:
  stage: build
  image: maven:3.9.6-eclipse-temurin-17
  script:
    - mvn $MAVEN_CLI_OPTS clean package -DskipTests
  artifacts:
    paths:
      - auth-service/target/*.jar
      - user-service/target/*.jar
      - message-service/target/*.jar

build_frontend:
  stage: build
  image: node:18
  script:
    - cd web-client
    - npm install
    - npm run build
  artifacts:
    paths:
      - web-client/dist

test_backend:
  stage: test
  image: maven:3.9.6-eclipse-temurin-17
  script:
    - mvn test

dockerize:
  stage: docker
  image: docker:25
  services:
    - docker:25-dind
  script:
    - docker build -t $CI_REGISTRY_IMAGE/auth-service ./auth-service
    - docker build -t $CI_REGISTRY_IMAGE/user-service ./user-service
    - docker build -t $CI_REGISTRY_IMAGE/message-service ./message-service
    - docker build -t $CI_REGISTRY_IMAGE/realtime-gateway ./realtime-gateway
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY -p $CI_REGISTRY_PASSWORD
    - docker push $CI_REGISTRY_IMAGE/auth-service
    - docker push $CI_REGISTRY_IMAGE/user-service
    - docker push $CI_REGISTRY_IMAGE/message-service
    - docker push $CI_REGISTRY_IMAGE/realtime-gateway

deploy:
  stage: deploy
  image: bitnami/kubectl:1.27
  script:
    - echo "$KUBECONFIG_CONTENT" > kubeconfig.yaml
    - export KUBECONFIG=kubeconfig.yaml
    - helm upgrade --install chat-app ./k8s --namespace chat --create-namespace
  only:
    - main
